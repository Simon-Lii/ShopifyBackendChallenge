{"ast":null,"code":"var _jsxFileName = \"/Users/i543731/projects/HackTheNorth2021/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport SubmitForm from \"./components/SubmitForm\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Redirect } from \"react-router\";\nimport Dashboard from \"./components/Dashboard\";\nimport Login from \"./components/Login\";\nimport Landing from \"./components/Landing\";\nimport axios from \"axios\";\nimport CreateUser from \"./components/CreateUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState([]);\n\n  const checkIfLoggedIn = () => {\n    let loggedIn = true; //Add login Logic\n\n    return loggedIn;\n  };\n\n  const requestCreateUser = (username, password) => {\n    let data = new FormData();\n    data.append('username', username);\n    data.append('password', password);\n    return axios.post(\"http://localhost:3000/api/create_user/\", data).then(response => response.status).catch(response => response.status);\n  };\n\n  const requestLogin = (username, password) => {\n    let data = new FormData();\n    data.append('username', username);\n    data.append('password', password);\n    return axios.post(\"http://localhost:3000/api/login/\", data).then(response => response.status).catch(response => response.status);\n  }; //TODO Login route needs logged in checking, add at the end when when we want to test our app\n\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: Landing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        exact: true,\n        render: props => !checkIfLoggedIn() ? /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: \"/login\",\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        render: props => checkIfLoggedIn() ? /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: \"/dashboard\",\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 69\n        }, this) : /*#__PURE__*/_jsxDEV(Login, {\n          loginRequest: requestLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 145\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/create_user\",\n        render: props => checkIfLoggedIn() ? /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: \"/dashboard\",\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 75\n        }, this) : /*#__PURE__*/_jsxDEV(CreateUser, {\n          createUserRequest: requestCreateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 151\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"VklLibMv5eZEFMyAzC8A++y6mD4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/i543731/projects/HackTheNorth2021/frontend/src/App.js"],"names":["useState","SubmitForm","BrowserRouter","Router","Route","Redirect","Dashboard","Login","Landing","axios","CreateUser","App","user","setUser","checkIfLoggedIn","loggedIn","requestCreateUser","username","password","data","FormData","append","post","then","response","status","catch","requestLogin","props","pathname","state","from","location"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA8C,kBAA9C;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMc,eAAe,GAAG,MAAM;AAC5B,QAAIC,QAAQ,GAAG,IAAf,CAD4B,CAG5B;;AAEA,WAAOA,QAAP;AACD,GAND;;AAQA,QAAMC,iBAAiB,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAChD,QAAIC,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwBJ,QAAxB;AACAE,IAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwBH,QAAxB;AACA,WAAOT,KAAK,CAACa,IAAN,CAAW,wCAAX,EAAqDH,IAArD,EACNI,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,MADpB,EAENC,KAFM,CAEAF,QAAQ,IAAIA,QAAQ,CAACC,MAFrB,CAAP;AAGD,GAPD;;AASA,QAAME,YAAY,GAAG,CAACV,QAAD,EAAWC,QAAX,KAAwB;AAC3C,QAAIC,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwBJ,QAAxB;AACAE,IAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwBH,QAAxB;AACA,WAAOT,KAAK,CAACa,IAAN,CAAW,kCAAX,EAA+CH,IAA/C,EACNI,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,MADpB,EAENC,KAFM,CAEAF,QAAQ,IAAIA,QAAQ,CAACC,MAFrB,CAAP;AAGD,GAPD,CArBa,CA8Bb;;;AACA,sBACE,QAAC,MAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,SAAS,EAAEjB;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,YAAZ;AAAyB,QAAA,KAAK,MAA9B;AAA+B,QAAA,MAAM,EAAGoB,KAAD,IAAW,CAACd,eAAe,EAAhB,gBAClD,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBADkD,gBACnC,QAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAACe,YAAAA,QAAQ,EAAE,QAAX;AAAqBC,YAAAA,KAAK,EAAG;AAACC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AAAb;AAA7B;AAAd;AAAA;AAAA;AAAA;AAAA;AADf;AAAA;AAAA;AAAA;AAAA,cAFF,eAIE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,MAAM,EAAGJ,KAAD,IAAWd,eAAe,kBAAK,QAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAACe,YAAAA,QAAQ,EAAE,YAAX;AAAyBC,YAAAA,KAAK,EAAG;AAACC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AAAb;AAAjC;AAAd;AAAA;AAAA;AAAA;AAAA,gBAAL,gBAAiF,QAAC,KAAD;AAAO,UAAA,YAAY,EAAEL;AAArB;AAAA;AAAA;AAAA;AAAA;AAAxI;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,cAAZ;AAA2B,QAAA,MAAM,EAAGC,KAAD,IAAWd,eAAe,kBAAK,QAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAACe,YAAAA,QAAQ,EAAE,YAAX;AAAyBC,YAAAA,KAAK,EAAG;AAACC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AAAb;AAAjC;AAAd;AAAA;AAAA;AAAA;AAAA,gBAAL,gBAAiF,QAAC,UAAD;AAAY,UAAA,iBAAiB,EAAEhB;AAA/B;AAAA;AAAA;AAAA;AAAA;AAA9I;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA1CQL,G;;KAAAA,G;AA4CT,eAAeA,GAAf","sourcesContent":["import \"./App.css\"\r\nimport { useState } from \"react\";\r\nimport SubmitForm from \"./components/SubmitForm\";\r\nimport { BrowserRouter as Router, Route} from 'react-router-dom'\r\nimport { Redirect } from \"react-router\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Login from \"./components/Login\"\r\nimport Landing from \"./components/Landing\"\r\nimport axios from \"axios\";\r\nimport CreateUser from \"./components/CreateUser\"\r\n\r\nfunction App() {\r\n\r\n  const [user, setUser] = useState([])\r\n\r\n  const checkIfLoggedIn = () => {\r\n    let loggedIn = true\r\n\r\n    //Add login Logic\r\n\r\n    return loggedIn\r\n  }\r\n\r\n  const requestCreateUser = (username, password) => {\r\n    let data = new FormData();\r\n    data.append('username', username);\r\n    data.append('password', password);\r\n    return axios.post(\"http://localhost:3000/api/create_user/\", data)\r\n    .then(response => response.status)\r\n    .catch(response => response.status)\r\n  }\r\n\r\n  const requestLogin = (username, password) => {\r\n    let data = new FormData();\r\n    data.append('username', username);\r\n    data.append('password', password);\r\n    return axios.post(\"http://localhost:3000/api/login/\", data)\r\n    .then(response => response.status)\r\n    .catch(response => response.status)\r\n  }\r\n\r\n  //TODO Login route needs logged in checking, add at the end when when we want to test our app\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Route path=\"/\" exact component={Landing}/>\r\n        <Route path=\"/dashboard\" exact render={(props) => !checkIfLoggedIn()  ? \r\n        <Dashboard/> : <Redirect to={{pathname: \"/login\", state : {from: props.location}}}/>} />\r\n        <Route path=\"/login\" render={(props) => checkIfLoggedIn() ? <Redirect to={{pathname: \"/dashboard\", state : {from: props.location}}}/> : <Login loginRequest={requestLogin}/> } />\r\n        <Route path=\"/create_user\" render={(props) => checkIfLoggedIn() ? <Redirect to={{pathname: \"/dashboard\", state : {from: props.location}}}/> : <CreateUser createUserRequest={requestCreateUser} /> } />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}